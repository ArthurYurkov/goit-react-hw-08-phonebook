{"version":3,"file":"static/js/56.36db0d91.chunk.js","mappings":"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","sources":["redux/Contacts/contactSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/styles.module.css?5005","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/styles.module.css?2090","webpack://goit-react-hw-08-phonebook/./src/components/Filter/styles.module.css?0bf3","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/styles.module.css?c2e0","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__evp8v\",\"inputStyle\":\"styles_inputStyle__PibJl\",\"btnCont\":\"styles_btnCont__QefUK\",\"regBtn\":\"styles_regBtn__7KxD4\"};","import { Box, TextField } from '@mui/material';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/Contacts/contactSelectors';\n\nimport { addContactsThunk } from 'redux/Contacts/contactsThunk';\nimport s from './styles.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const nameChange = e => setName(e.target.value.trim());\n  const numberChange = e => setNumber(e.target.value.trim());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContactItem = {\n      name: name,\n      number: number,\n    };\n\n    contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n      ? alert(`${name} is already in list`)\n      : dispatch(addContactsThunk(newContactItem));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <div className={s.container}>\n        <h2>Phonebook</h2>\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          sx={{\n            '& .MuiTextField-root': { m: 1, width: '35ch' },\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <div className={s.inputStyle}>\n            <TextField\n              id=\"outlined-name-input\"\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={nameChange}\n              className={s.inpt}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              autoComplete=\"current-password\"\n            />\n\n            <TextField\n              id=\"outlined-password-input\"\n              label=\"Number\"\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={numberChange}\n              className={s.inpt}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              autoComplete=\"current-password\"\n            />\n            <div className={s.btnCont}>\n              <button className={s.regBtn} type=\"submit\">\n                Add contact\n              </button>\n            </div>\n          </div>\n        </Box>\n      </div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__AJRx2\",\"contactItem\":\"styles_contactItem__XovxX\",\"contactBtn\":\"styles_contactBtn__-dAd0\"};","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"styles_filterContainer__eiQ9k\",\"filterInput\":\"styles_filterInput__mGq-2\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/Contacts/contactSelectors';\nimport { filterContacts } from 'redux/Contacts/contactsSlice';\nimport s from './styles.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => dispatch(filterContacts(e.target.value));\n  return (\n    <>\n      <div className={s.filterContainer}>\n        <p>Filter</p>\n        <label className={s.filterFocus}>\n          <input\n            type=\"text\"\n            name=\"filter\"\n            className={s.filterInput}\n            value={filter}\n            onChange={handleFilter}\n            placeholder=\"Name\"\n          />\n        </label>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/Contacts/contactSelectors';\nimport {\n  deleteContactsThunk,\n  getContactsThunk,\n} from 'redux/Contacts/contactsThunk';\nimport s from './styles.module.css';\n\nimport Filter from 'components/Filter/Filter';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filterTerm = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const filterList = () => {\n    const filter = filterTerm.toLowerCase().trim();\n    return Array.isArray(contacts)\n      ? contacts.filter(contact => contact.name.toLowerCase().includes(filter))\n      : [];\n  };\n\n  const filteredContacts = filterList();\n\n  return (\n    <>\n      <div className={s.container}>\n        <Filter />\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <div key={id} className={s.contactList}>\n              <div className={s.contactItem}>\n                <span>{name}</span>\n                <span>{number}</span>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    dispatch(deleteContactsThunk(id));\n                  }}\n                  className={s.contactBtn}\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__K-VBf\"};","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport s from './styles.module.css';\n\nexport default function Contacts() {\n  return (\n    <>\n      <div className={s.container}>\n        <ContactForm />\n        <ContactList />\n      </div>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","className","s","Box","component","onSubmit","e","preventDefault","newContactItem","find","contact","toLowerCase","alert","addContactsThunk","sx","m","width","noValidate","autoComplete","TextField","id","label","type","value","onChange","target","trim","pattern","title","Filter","filterContacts","placeholder","ContactList","filterTerm","useEffect","getContactsThunk","filteredContacts","Array","isArray","includes","filterList","map","onClick","deleteContactsThunk","Contacts"],"sourceRoot":""}