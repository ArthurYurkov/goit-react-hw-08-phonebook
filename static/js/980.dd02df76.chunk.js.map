{"version":3,"file":"static/js/980.dd02df76.chunk.js","mappings":"yPACA,EAA4B,0BAA5B,EAAmE,2BAAnE,EAAwG,wBAAxG,EAAyI,uB,SCO1H,SAASA,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAkBXC,EAAQ,WACZL,EAAa,IACbE,EAAgB,GACjB,EAED,OACE,gBAAKI,UAAWC,EAAhB,UACE,SAACC,EAAA,EAAD,CACEC,UAAU,OACVC,SAtBe,SAAAC,GAEnB,GADAA,EAAEC,iBACgB,KAAdb,EAAkB,CACpB,IAAMc,EAAU,CACdC,MAAOf,EACPgB,SAAUd,GAEZE,GAASa,EAAAA,EAAAA,IAAcH,GACxB,CAEDR,GACD,EAYKY,GAAI,CACF,uBAAwB,CAAEC,EAAG,EAAGC,MAAO,SAEzCC,YAAU,EACVC,aAAa,MAPf,UASE,iBAAKf,UAAWC,EAAhB,WACE,SAACe,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,sBACHC,MAAM,QACNC,KAAK,OACLC,SAtCU,SAAAhB,GAAC,OAAIX,EAAaW,EAAEiB,OAAOC,MAAMC,OAAhC,EAuCXD,MAAO9B,EACPsB,aAAa,sBAGf,SAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,0BACHC,MAAM,WACNC,KAAK,WACLC,SA/Ca,SAAAhB,GAAC,OAAIT,EAAgBS,EAAEiB,OAAOC,MAAMC,OAAnC,EAgDdD,MAAO5B,EACPoB,aAAa,sBAEf,gBAAKf,UAAWC,EAAhB,UACE,mBAAQD,UAAWC,EAAnB,2BAMX,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/Login/styles.module.css?5fba","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__560MJ\",\"inputStyle\":\"styles_inputStyle__4-BpQ\",\"btnCont\":\"styles_btnCont__sKfxM\",\"regBtn\":\"styles_regBtn__qvDRs\"};","import Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getLogInThunk } from 'redux/Auth/authThunk';\n\nimport s from './styles.module.css';\n\nexport default function Login() {\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const emailChange = e => setUserEmail(e.target.value.trim());\n  const passwordChange = e => setUserPassword(e.target.value.trim());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (userEmail !== '') {\n      const newUser = {\n        email: userEmail,\n        password: userPassword,\n      };\n      dispatch(getLogInThunk(newUser));\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setUserEmail('');\n    setUserPassword('');\n  };\n\n  return (\n    <div className={s.container}>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '35ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div className={s.inputStyle}>\n          <TextField\n            required\n            id=\"outlined-name-input\"\n            label=\"Email\"\n            type=\"text\"\n            onChange={emailChange}\n            value={userEmail}\n            autoComplete=\"current-password\"\n          />\n\n          <TextField\n            required\n            id=\"outlined-password-input\"\n            label=\"Password\"\n            type=\"password\"\n            onChange={passwordChange}\n            value={userPassword}\n            autoComplete=\"current-password\"\n          />\n          <div className={s.btnCont}>\n            <button className={s.regBtn}>Login</button>\n          </div>\n        </div>\n      </Box>\n    </div>\n  );\n}\n"],"names":["Login","useState","userEmail","setUserEmail","userPassword","setUserPassword","dispatch","useDispatch","reset","className","s","Box","component","onSubmit","e","preventDefault","newUser","email","password","getLogInThunk","sx","m","width","noValidate","autoComplete","TextField","required","id","label","type","onChange","target","value","trim"],"sourceRoot":""}